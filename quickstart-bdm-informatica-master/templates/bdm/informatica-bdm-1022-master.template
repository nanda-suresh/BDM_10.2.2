{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Informatica Data Engineering Integration. This template creates Amazon EC2 instances, Elastic IPs, RDS, EMR and related (IAM, security and lambda) resources. You will be billed for the AWS resources used if you create a stack from this template.",
  "Parameters": {
    "InfaHA": {
      "Description": "Enable or disable high availability for the Informatica deployment.",
      "Type": "String",
      "MinLength": "1",
      "AllowedValues": [
        "Enable",
        "Disable"
      ],
      "Default": "Disable",
      "ConstraintDescription": "Specifying High Availability is mandetory"
    },
    "InformaticaLicenseKeyS3URI": {
      "Description": "Enter the S3 Bucket URI for the Data Engineering Integration license key. Use the following format: s3://bucket-name/license.key or s3://bucket-name/sub-folder/license.key",
      "Type": "String",
      "AllowedPattern": "^s3://.*/.*$",
      "ConstraintDescription": "Not a valid S3 bucket URI. Should be like s3://bucket-name/license.key or s3://bucket-name/sub-folder/license.key"
    },
    "S3BucketName": {
      "Type": "String",
      "Description": "To use an existing S3 bucket, enter the bucket name. This creates an S3 connection with the informatica domain."
    },
    "EMR": {
      "Type": "String",
      "Description": "To use an existing EMR cluster, enter the cluster ID. To use the cluster that an Informatica workflow creates, leave the field empty."
    },
    "DeployBastionServer": {
      "Type": "String",
      "Default": "No",
      "AllowedValues": [
        "Yes",
        "No"
      ],
      "Description": "Select Yes to deploy a bastion server to permit external clients to access resources in the VPC."
    },
    "KeyPairName": {
      "Description": "Select an EC2 key pair to enable SSH and RDP access to Informatica Data Engineering Integration.",
      "Type": "AWS::EC2::KeyPair::KeyName"
    },
    "AvailabilityZones": {
      "Description": "List of Availability Zones to use for the subnets in the VPC. Choose at least two zones.",
      "Type": "List<AWS::EC2::AvailabilityZone::Name>"
    },
    "PrivateSubnet1CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.0.0/19",
      "Description": "CIDR block for private subnet 1. Must be within the VPC CIDR. Format: x.x.x.x/x ",
      "Type": "String"
    },
    "PrivateSubnet2CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.192.0/21",
      "Description": "CIDR block for private subnet 2. Must be within the VPC CIDR. Format: x.x.x.x/x ",
      "Type": "String"
    },
    "PublicSubnet1CIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.128.0/20",
      "Description": "CIDR block for the public subnet. Must be within the VPC CIDR. Format: x.x.x.x/x ",
      "Type": "String"
    },
    "IPAddressRange": {
      "Description": "The CIDR IP range of clients that are permitted to access Informatica Data Engineering Integration. Format: x.x.x.x/x ",
      "Type": "String",
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/([0-9]|[1-2][0-9]|3[0-2]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/x"
    },
    "VPCCIDR": {
      "AllowedPattern": "^(([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])\\.){3}([0-9]|[1-9][0-9]|1[0-9]{2}|2[0-4][0-9]|25[0-5])(\\/(1[6-9]|2[0-8]))$",
      "ConstraintDescription": "CIDR block parameter must be in the form x.x.x.x/16-28",
      "Default": "10.0.0.0/16",
      "Description": "CIDR block for the new VPC. Format: x.x.x.x/x ",
      "Type": "String"
    }

  },
  "Rules": {
  },
  "Conditions": {
    "GovCloudCondition": {
      "Fn::Equals": [
        {
          "Ref": "AWS::Region"
        },
        "us-gov-west-1"
      ]
    },
    "DeployBastionServerCnd": {
      "Fn::Equals": [
        {
          "Ref": "DeployBastionServer"
        },
        "Yes"
      ]
    },
    "HACnd": {
      "Fn::Equals": [
        {
          "Ref": "InfaHA"
        },
        "Enable"
      ]
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Network Configuration"
          },
          "Parameters": [
            "AvailabilityZones",
            "VPCCIDR",
            "PublicSubnet1CIDR",
            "PrivateSubnet1CIDR",
            "PrivateSubnet2CIDR",
            "IPAddressRange"
          ]
        },
        {
          "Label": {
            "default": "Bastion Server for Informatica"
          },
          "Parameters": [
            "DeployBastionServer"
          ]
        },
        {
          "Label": {
            "default": "Amazon EC2 Configuration"
          },
          "Parameters": [
            "KeyPairName"
          ]
        },
        {
          "Label": {
            "default": "Informatica Data Engineering Integration Configuration"
          },
          "Parameters": [
            "InformaticaLicenseKeyS3URI",
            "InfaHA",
            "S3BucketName",
            "EMR"
          ]
        }
      ],
      "ParameterLabels": {
        "AvailabilityZones": {
          "default": "Availability Zones*"
        },
        "DeployBastionServer": {
          "default": "Deploy Bastion Server*"
        },
        "InfaHA": {
          "default": "High Availability Deployment*"
        },
        "InformaticaLicenseKeyS3URI": {
          "default": "License Key S3 Bucket URI*"
        },
        "IHSClusterSize": {
          "default": "Deployment Type*"
        },
        "S3BucketName": {
          "default": "S3 Bucket Name"
        },
        "EMR": {
          "default": "Cluster ID for Amazon EMR"
        },
        "KeyPairName": {
          "default": "Key Pair Name*"
        },
        "VPCCIDR": {
          "default": "VPC CIDR*"
        },
        "PublicSubnet1CIDR": {
          "default": "Public Subnet CIDR*"
        },
        "PrivateSubnet1CIDR": {
          "default": "Private Subnet 1 CIDR*"
        },
        "PrivateSubnet2CIDR": {
          "default": "Private Subnet 2  CIDR*"
        },
        "IPAddressRange": {
          "default": "CIDR IP Range*"
        }
      }
    }
  },
  "Mappings": {
    "DEI": {
      "QSS3Bucket": {
        "value": "infa-aws-resources"
      },
      "QSS3Prefix": {
        "value": "1040/DEI"
      },
      "ICSClusterSize": {
        "value": "Medium"
      },
      "InstallationConfig": {
        "InstallationBucket": "infa-aws-resources",
        "InstallationLicenseKey": "edp/license/license.key"
      },
      "DBPassword": {
        "value": "admin12345"
      },
      "DBMultiAz": {
        "value": "No"
      },
      "InfaHA": {
        "value": "No"
      }
    }
  },
  "Resources": {
    "VPCStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {

        "TemplateURL": {
          "Fn::Sub": [
            "https://${QSS3Bucket}.${QSS3Region}.amazonaws.com/${QSS3Prefix}/informatica-vpc.template",
            {
              "QSS3Region": {
                "Fn::If": [
                  "GovCloudCondition",
                  "s3-us-gov-west-1",
                  "s3"
                ]
              },
              "QSS3Bucket": {
                "Fn::FindInMap": [
                  "DEI",
                  "QSS3Bucket",
                  "value"
                ]
              },
              "QSS3Prefix": {
                "Fn::FindInMap": [
                  "DEI",
                  "QSS3Prefix",
                  "value"
                ]
              }
            }
          ]
        },
        "Parameters": {
          "AvailabilityZones": {
            "Fn::Join": [
              ",",
              {
                "Ref": "AvailabilityZones"
              }
            ]
          },
          "PrivateSubnet1CIDR": {
            "Ref": "PrivateSubnet1CIDR"
          },
          "PrivateSubnet2CIDR": {
            "Ref": "PrivateSubnet2CIDR"
          },
          "PublicSubnet1CIDR": {
            "Ref": "PublicSubnet1CIDR"
          },
          "VPCCIDR": {
            "Ref": "VPCCIDR"
          }
        }
      }
    },
    "DEIStack": {
      "Type": "AWS::CloudFormation::Stack",
      "Properties": {
        "TemplateURL": {
          "Fn::Sub": [
            "https://${QSS3Bucket}.${QSS3Region}.amazonaws.com/${QSS3Prefix}/informatica-data-engineering-integration-existing-vpc.template",
            {
              "QSS3Region": {
                "Fn::If": [
                  "GovCloudCondition",
                  "s3-us-gov-west-1",
                  "s3"
                ]
              },
              "QSS3Bucket": {
                "Fn::FindInMap": [
                  "DEI",
                  "QSS3Bucket",
                  "value"
                ]
              },
              "QSS3Prefix": {
                "Fn::FindInMap": [
                  "DEI",
                  "QSS3Prefix",
                  "value"
                ]
              }
            }
          ]
        },
        "Parameters": {
          "VPC": {
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.VPCID"
            ]
          },
          "KeyPairName": {
            "Ref": "KeyPairName"
          },
          "InfaHA": {
            "Ref": "InfaHA"
          },
          "InformaticaLicenseKeyS3URI": {
            "Ref": "InformaticaLicenseKeyS3URI"
          },
          "S3BucketName": {
            "Ref": "S3BucketName"
          },
          "EMR": {
            "Ref": "EMR"
          },
          "BastionSubnet": {
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.PublicSubnet1ID"
            ]
          },
          "Subnet1": {
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.PrivateSubnet1ID"
            ]
          },
          "Subnet2": {
            "Fn::GetAtt": [
              "VPCStack",
              "Outputs.PrivateSubnet2ID"
            ]
          },
          "IPAddressRange": {
            "Ref": "IPAddressRange"
          },
          "DeployBastionServer": {
            "Ref": "DeployBastionServer"
          },
          "SubnetCheck": "No"
        }
      }
    }
  },
  "Outputs": {
    "InformaticaAdminConsolePrivateURL": {
      "Description": "Informatica Administrator console URL (Private DNS)",
      "Value": {
        "Fn::GetAtt": [
          "DEIStack",
          "Outputs.InformaticaAdminConsolePrivateURL"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}:InformaticaAdminConsolePrivateURL"
        }
      }
    },
    "InformaticaAdminConsolePublicURL": {
      "Description": "Informatica Administrator console URL(Public DNS)",
      "Value": {
        "Fn::GetAtt": [
          "DEIStack",
          "Outputs.InformaticaAdminConsolePublicURL"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}:InformaticaAdminConsolePublicURL"
        }
      }
    },
    "HANodeIP": {
      "Condition": "HACnd",
      "Description": "Informatica high availability node IP. Note: Available only when Informatica High Availability Deployment is enabled.",
      "Value": {
        "Fn::GetAtt": [
          "DEIStack",
          "Outputs.HANodeIP"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}:HANodeIP"
        }
      }
    },

    "BastionPrivateDNS": {
      "Condition": "DeployBastionServerCnd",
      "Description": "Informatica bastion server private DNS.",
      "Value": {
        "Fn::GetAtt": [
          "DEIStack",
          "Outputs.BastionPrivateDNS"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}:BastionPrivateDNS"
        }
      }
    },
    "BastionPublicIPDNS": {
      "Condition": "DeployBastionServerCnd",
      "Description": "Informatica bastion server public DNS/IP.",
      "Value": {
        "Fn::GetAtt": [
          "DEIStack",
          "Outputs.BastionPublicIPDNS"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}:BastionPublicIPDNS"
        }
      }
    },
    "InformaticaAdminConsoleServerLogs": {
      "Description": "Informatica domain installation log location",
      "Value": {
        "Fn::GetAtt": [
          "DEIStack",
          "Outputs.InformaticaAdminConsoleServerLogs"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}:InformaticaAdminConsoleServerLogs"
        }
      }
    },
    "InstanceSetupLogs": {
      "Description": "Informatica domain EC2 instance setup log location",
      "Value": {
        "Fn::GetAtt": [
          "DEIStack",
          "Outputs.InstanceSetupLogs"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}:InstanceSetupLogs"
        }
      }
    },
    "AdminConsoleUser": {
      "Description": "Informatica domain user",
      "Value": {
        "Fn::GetAtt": [
          "DEIStack",
          "Outputs.AdminConsoleUser"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}:AdminConsoleUser"
        }
      }
    },
    "AdminConsoleUserPwd": {
      "Description": "Informatica domain user password",
      "Value": {
        "Fn::GetAtt": [
          "DEIStack",
          "Outputs.AdminConsoleUserPwd"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}:AdminConsoleUserPwd"
        }
      }
    },
    "DBUsers": {
      "Description": "Informatica database users. The root user is admin.",
      "Value": {
        "Fn::GetAtt": [
          "DEIStack",
          "Outputs.DBUsers"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}:DBUsers"
        }
      }
    },
    "DBUserPwd": {
      "Description": "Informatica database user password",
      "Value": {
        "Fn::GetAtt": [
          "DEIStack",
          "Outputs.DBUserPwd"
        ]
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}:DBUserPwd"
        }
      }
    }
  }
}
